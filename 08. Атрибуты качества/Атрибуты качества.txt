1. Масштабируемость.

Масштабируемость относится к способности системы или процесса адаптироваться к увеличивающемуся или уменьшающемуся объему работы. Это может быть связано как с увеличением числа пользователей, так и с ростом объемов данных или сложности задач. Масштабируемость важна для того, чтобы система могла эффективно справляться с изменениями в нагрузке, не теряя в производительности.

В информационных технологиях масштабируемость часто включает в себя следующие аспекты:

    Горизонтальная масштабируемость: добавление дополнительных машин или узлов в систему для распределения нагрузки.
    Вертикальная масштабируемость: увеличение ресурсов в одной машине, таких как CPU, память или дисковое пространство.
    Функциональная масштабируемость: способность системы добавлять новые функции без существенных изменений в существующей инфраструктуре.

Масштабируемость часто оценивается по эффективности управления ресурсами, сохранению производительности при увеличении нагрузки и способности поддерживать управляемость, безопасность и надежность на всех уровнях работы системы.

Предлагаются следующие сроедства масштабирования:
1.1. Kubernetes Horizontal Pod Autoscaler (HPA)

HPA автоматически масштабирует количество подов в развертывании, репликасете, стейтфулсете или репликационном контроллере на основе указанных метрик, таких как CPU или память.
Поддерживает масштабирование на основе встроенных метрик (например, CPU и память) и настраиваемых метрик (с использованием Custom Metrics API).
(https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)

1.2. Prometheus и Prometheus Operator

Prometheus — это система мониторинга и оповещения с открытым исходным кодом, которая часто используется вместе с Kubernetes. Prometheus Operator упрощает развертывание и конфигурацию Prometheus в кластерах Kubernetes.
В сочетании с HPA, Prometheus может быть использован для масштабирования на основе настраиваемых метрик, собранных с помощью Prometheus.
(https://prometheus.io/)

1.3. KEDA (Kubernetes Event-driven Autoscaling)

KEDA позволяет автоматически масштабировать Kubernetes поды на основе событий (например, сообщений в очереди) или метрик из различных источников.
Поддерживает широкий спектр источников событий и метрик, включая Kafka, RabbitMQ, Azure Event Hubs и многие другие.
(https://keda.sh/)

1.4. Knative

Knative предлагает набор компонентов для построения и развертывания серверлесс функций и приложений на Kubernetes. Knative Serving поддерживает автоматическое масштабирование, включая масштабирование до нуля и обратно.
Поддерживает масштабирование на основе HTTP трафика и других метрик, а также интеграцию с CloudEvents для событийно-ориентированного масштабирования.
(https://knative.dev/)


2. Достукпность

Доступность означает способность системы или компонента быть доступным и функционировать нормально при необходимости, даже в условиях частичных сбоев или внешних помех. Это ключевой показатель для систем, которые должны быть постоянно доступны, таких как онлайн-сервисы, банковские системы, медицинские устройства и критические производственные системы.

Доступность включает несколько основных аспектов:

    Надежность: способность системы или компонента выполнять требуемые функции под заданными условиями в течение заданного времени.
    Устойчивость: способность системы продолжать работу в случае сбоев или ошибок в одной или нескольких компонентах.
    Обслуживаемость: способность системы быть быстро восстановленной или обновленной после сбоя или проведения технического обслуживания.
    Отказоустойчивость: включение резервных компонентов или систем, которые могут немедленно взять на себя функциональность в случае отказа основных элементов.

Доступность часто измеряется в процентах и рассчитывается как отношение времени, когда система доступна, к общему времени наблюдения. Например, система с доступностью 99,9% означает, что она может быть недоступна до 8,76 часов в год. Эти показатели помогают организациям планировать и обеспечивать высокий уровень обслуживания для своих пользователей.


3. Безопасность

Безопасность в контексте информационных систем означает защиту данных и систем от несанкционированного доступа, использования, раскрытия, нарушения, модификации или уничтожения. Основная цель безопасности - обеспечить конфиденциальность, целостность и доступность информации.

Конфиденциальность означает, что информация доступна или раскрывается только тем лицам, которые имеют на это право. Это помогает предотвратить несанкционированный доступ к чувствительной информации.

Целостность подразумевает сохранение точности и полноты данных и методов их обработки. Это означает, что информация не должна быть изменена или искажена ни в ходе передачи, ни в результате хранения.

Доступность гарантирует, что данные и ресурсы системы доступны уполномоченным пользователям, когда это необходимо, и что система способна эффективно справляться с запросами доступа.

В рамках обеспечения безопасности важными являются также следующие аспекты:

    Аутентификация и авторизация, обеспечивающие проверку и подтверждение личности пользователей, а также определение их прав на доступ к ресурсам.
    Аудит и мониторинг для отслеживания и регистрации всех действий, связанных с системой, что позволяет выявлять и реагировать на безопасностные инциденты.
    Шифрование данных для защиты их конфиденциальности во время передачи и хранения.
    Резервное копирование и восстановление данных для обеспечения их восстановления после сбоев или инцидентов, связанных с безопасностью.

Безопасность системы должна рассматриваться комплексно, включая аппаратные, программные и организационные меры защиты.